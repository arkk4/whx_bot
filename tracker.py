# tracker.py
import sqlite3
import os
import logging
from fastapi import FastAPI, Request, Form
from fastapi.responses import RedirectResponse, HTMLResponse, JSONResponse
from fastapi.middleware.cors import CORSMiddleware

# --- –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è ---
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

DATABASE_PATH = os.environ.get("DATABASE_PATH", "/var/lib/wh_bot/bot_database.db")
BASE_URL = os.environ.get("BASE_URL", "https://www.woninghuren.nl/aanbod/te-huur/details/")

app = FastAPI()

# –î–æ–¥–∞—î–º–æ CORS, —â–æ–± –±—Ä–∞—É–∑–µ—Ä –¥–æ–∑–≤–æ–ª–∏–≤ POST-–∑–∞–ø–∏—Ç –∑—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

def db_execute(query: str, params: tuple = ()):
    """–£—Ç–∏–ª—ñ—Ç–∞ –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—ñ–≤ –¥–æ –ë–î –∑ —É–≤—ñ–º–∫–Ω–µ–Ω–∏–º WAL."""
    try:
        with sqlite3.connect(DATABASE_PATH, timeout=25.0) as conn:
            conn.execute("PRAGMA journal_mode=WAL")
            conn.execute(query, params)
            conn.commit()
    except Exception as e:
        logging.error(f"–ü–æ–º–∏–ª–∫–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—É –¥–æ –ë–î: {e}")

@app.get("/track")
def track_click(user_id: int, url_key: str, request: Request):
    user_agent = request.headers.get('user-agent')
    db_execute(
        'INSERT INTO url_clicks (user_id, url_key, user_agent) VALUES (?, ?, ?)',
        (user_id, url_key, user_agent)
    )
    final_url = BASE_URL + url_key
    logging.info(f"–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_id} –Ω–∞ {final_url}")
    return RedirectResponse(url=final_url)

@app.get("/get_tz", response_class=HTMLResponse)
def get_timezone_page(user_id: int):
    # –¶—è HTML-—Å—Ç–æ—Ä—ñ–Ω–∫–∞ –±—É–¥–µ –ø–æ–∫–∞–∑–∞–Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –≤ Telegram
    html_content = f"""
    <!DOCTYPE html>
    <html lang="uk">
    <head>
        <meta charset="UTF-8">
        <meta name-viewport" content="width=device-width, initial-scale=1.0">
        <title>–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å—É</title>
        <style>
            body {{ font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif; display: flex; justify-content: center; align-items: center; height: 100vh; margin: 0; background-color: #f0f2f5; text-align: center; }}
            .container {{ padding: 20px; background-color: white; border-radius: 12px; box-shadow: 0 4px 12px rgba(0,0,0,0.1); }}
            #status {{ margin-top: 15px; font-weight: bold; }}
        </style>
    </head>
    <body>
        <div class="container">
            <h2>–í–∏–∑–Ω–∞—á–µ–Ω–Ω—è —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å—É</h2>
            <p>–ó–∞—á–µ–∫–∞–π—Ç–µ, –º–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤–∏–∑–Ω–∞—á–∞—î–º–æ –≤–∞—à —á–∞—Å–æ–≤–∏–π –ø–æ—è—Å...</p>
            <p id="status">ü§î –í–∏–∑–Ω–∞—á–∞—é...</p>
        </div>
        <script>
            document.addEventListener('DOMContentLoaded', (event) => {{
                const statusEl = document.getElementById('status');
                try {{
                    const userTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;
                    statusEl.textContent = `‚úÖ –í–∞—à —á–∞—Å–æ–≤–∏–π –ø–æ—è—Å: ${{userTimezone}}`;
                    
                    fetch('/set_tz', {{
                        method: 'POST',
                        headers: {{ 'Content-Type': 'application/x-www-form-urlencoded' }},
                        body: `user_id={user_id}&timezone=${{encodeURIComponent(userTimezone)}}`
                    }})
                    .then(response => response.json())
                    .then(data => {{
                        if(data.status === 'ok') {{
                            statusEl.innerHTML += '<br>‚úîÔ∏è –ó–±–µ—Ä–µ–∂–µ–Ω–æ! –ú–æ–∂–µ—Ç–µ –∑–∞–∫—Ä–∏—Ç–∏ —Ü–µ –≤—ñ–∫–Ω–æ.';
                        }} else {{
                            statusEl.innerHTML += '<br>‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è.';
                        }}
                    }})
                    .catch(error => {{
                        console.error('Error:', error);
                        statusEl.innerHTML += '<br>‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–≤\\'—è–∑–∞—Ç–∏—Å—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º.';
                    }});

                }} catch (e) {{
                    statusEl.textContent = '‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–∑–Ω–∞—á–∏—Ç–∏ –≤–∞—à —á–∞—Å–æ–≤–∏–π –ø–æ—è—Å.';
                    console.error(e);
                }}
            }});
        </script>
    </body>
    </html>
    """
    return HTMLResponse(content=html_content)

@app.post("/set_tz")
def set_timezone(user_id: int = Form(...), timezone: str = Form(...)):
    if not user_id or not timezone:
        return JSONResponse(status_code=400, content={"status": "error", "message": "Missing user_id or timezone"})

    logging.info(f"–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å—É '{timezone}' –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_id}")
    db_execute(
        "UPDATE users SET timezone = ?, updated_at = CURRENT_TIMESTAMP WHERE user_id = ?",
        (timezone, user_id)
    )
    return JSONResponse(content={"status": "ok"})

@app.get("/health")
def health_check():
    return {"status": "ok"}